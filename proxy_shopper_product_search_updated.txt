API ENDPOINT: GET /api/ProxyShopper/products/advanced-search (UPDATED)
================================================================

DESCRIPTION:
Endpoint tìm kiếm sản phẩm nâng cao cho Proxy Shopper. Đã được cập nhật để chỉ tìm kiếm sản phẩm trong chợ mà proxy shopper đã đăng ký.

URL: http://localhost:5183/api/ProxyShopper/products/advanced-search
METHOD: GET
AUTHENTICATION: Required - JWT Bearer Token
AUTHORIZATION: Required - Role "Proxy Shopper"

REQUEST HEADERS:
- Authorization: Bearer {jwt_token}
- Content-Type: application/json

QUERY PARAMETERS:
- query (string, required): Từ khóa tìm kiếm sản phẩm
- wPrice (double, optional, default=0.25): Trọng số cho giá cả
- wReputation (double, optional, default=0.25): Trọng số cho uy tín
- wSold (double, optional, default=0.25): Trọng số cho lượt bán
- wStock (double, optional, default=0.25): Trọng số cho tình trạng kho

EXAMPLE REQUEST:
GET /api/ProxyShopper/products/advanced-search?query=thịt bò&wPrice=0.3&wReputation=0.2&wSold=0.3&wStock=0.2

BUSINESS LOGIC:
1. Lấy ProxyShopperId từ JWT token
2. Tìm ProxyShopperRegistration để lấy StoreId đã đăng ký
3. Chỉ tìm kiếm sản phẩm có StoreId trùng với chợ đã đăng ký
4. Áp dụng thuật toán scoring với các trọng số
5. Sắp xếp theo điểm số cao nhất
6. Trả về danh sách sản phẩm đã được ranked

RESPONSE FORMAT:
[
  {
    "id": "string",
    "name": "string",
    "price": number,
    "sellerReputation": number, // 0-5 scale
    "purchaseCount": number,
    "inStock": boolean,
    "storeName": "string",
    "unitName": "string",
    "images": ["string"],
    "status": "string",
    "score": number // Điểm tổng hợp
  }
]

EXAMPLE RESPONSE:
[
  {
    "id": "prod123",
    "name": "Thịt bò úc loại 1",
    "price": 500000,
    "sellerReputation": 4.5,
    "purchaseCount": 150,
    "inStock": true,
    "storeName": "Chợ Bến Thành",
    "unitName": "kg",
    "images": [
      "https://example.com/beef1.jpg",
      "https://example.com/beef2.jpg"
    ],
    "status": "Active",
    "score": 0.85
  },
  {
    "id": "prod456",
    "name": "Thịt bò nạm",
    "price": 450000,
    "sellerReputation": 4.2,
    "purchaseCount": 89,
    "inStock": true,
    "storeName": "Chợ Bến Thành",
    "unitName": "kg",
    "images": [
      "https://example.com/beef3.jpg"
    ],
    "status": "Active",
    "score": 0.78
  }
]

SCORING ALGORITHM:
- Price Score: Tính theo tỷ lệ nghịch với giá (giá thấp = điểm cao)
- Reputation Score: Cố định 0.5 (tạm thời)
- Sold Score: Tính theo lượt bán (bán nhiều = điểm cao)
- Stock Score: 1 nếu Active, 0 nếu không
- Final Score = wPrice × priceScore + wReputation × reputationScore + wSold × soldScore + wStock × stockScore

ERROR RESPONSES:
- 401 Unauthorized: Missing or invalid JWT token
- 403 Forbidden: User không có role "Proxy Shopper"
- 500 Internal Server Error: Lỗi server

EDGE CASES:
- Proxy chưa có registration: Trả về empty array
- Registration chưa approved: Trả về empty array
- Không có sản phẩm matching: Trả về empty array
- Store không tồn tại: Trả về empty array

KEY IMPROVEMENTS:
1. ✅ Store-based filtering: Chỉ tìm sản phẩm trong chợ đã đăng ký
2. ✅ Security: Validate proxy registration status
3. ✅ Performance: Pre-filter products by StoreId
4. ✅ Logging: Debug information cho troubleshooting
5. ✅ Error handling: Graceful handling of edge cases

USE CASES:
- Proxy shopper tìm sản phẩm để thêm vào proposal
- So sánh sản phẩm trong cùng chợ
- Tìm sản phẩm tương tự với trọng số tùy chỉnh
- Lên danh sách shopping list cho buyer

RELATED ENDPOINTS:
- GET /api/Store - Lấy danh sách chợ
- GET /api/ProxyShopper/requests/available - Lấy request có sẵn
- POST /api/ProxyShopper/orders/{orderId}/proposal - Gửi proposal
