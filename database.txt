Table Users {
  user_id bigint [primary key, increment]
  username varchar(50) [unique, not null]
  email varchar(100) [unique, not null]
  password_hash varchar(255) [not null]
  full_name varchar(100) [not null]
  phone_number varchar(20)
  address text
  role enum('Buyer', 'Seller', 'ProxyShopper', 'Admin', 'MarketStaff', 'MarketManagementBoardHead', 'LocalGovernmentRepresentative') [not null]
  status enum('Active', 'Inactive', 'Suspended') [default: 'Active']
  is_email_verified boolean [default: false]
  two_factor_enabled boolean [default: false]
  avatar_url varchar(255) // Ảnh đại diện người dùng
  operating_area varchar(100) // Khu vực hoạt động của Proxy Shopper
  preferred_language enum('Vietnamese', 'English') [default: 'Vietnamese'] // UC137
  preferred_theme enum('Light', 'Dark') [default: 'Light'] // UC138
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Seller_Registrations {
  registration_id bigint [primary key, increment]
  user_id bigint [ref: > Users.user_id, not null]
  store_name varchar(100) [not null]
  store_address text [not null]
  market_id bigint [ref: > Markets.market_id, not null]
  status enum('Pending', 'Approved', 'Rejected') [default: 'Pending']
  rejection_reason text
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Seller_Licenses {
  license_id bigint [primary key, increment]
  registration_id bigint [ref: > Seller_Registrations.registration_id, not null]
  license_type enum('BusinessLicense', 'FoodSafetyCertificate', 'TaxRegistration', 'EnvironmentalPermit', 'Other') [not null]
  license_number varchar(100)
  license_url varchar(255) [not null] // Đường dẫn tới tệp giấy phép
  issue_date date
  expiry_date date
  issuing_authority varchar(100)
  status enum('Pending', 'Verified', 'Rejected') [default: 'Pending']
  rejection_reason text
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table ProxyShopper_Registrations {
  registration_id bigint [primary key, increment]
  user_id bigint [ref: > Users.user_id, not null]
  operating_area varchar(100) [not null]
  transport_method varchar(50) [not null]
  payment_method varchar(100) [not null]
  status enum('Pending', 'Approved', 'Rejected') [default: 'Pending']
  rejection_reason text
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Markets {
  market_id bigint [primary key, increment]
  name varchar(100) [not null]
  address text [not null]
  description text
  operating_hours varchar(50)
  contact_info varchar(100)
  latitude decimal(10,8) // Vĩ độ cho Google Maps
  longitude decimal(11,8) // Kinh độ cho Google Maps
  status enum('Active', 'Suspended') [default: 'Active']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Market_Managers {
  manager_id bigint [primary key, increment]
  market_id bigint [ref: > Markets.market_id, not null]
  user_id bigint [ref: > Users.user_id, not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  indexes {
    (market_id, user_id) [unique]
  }
}

Table Stores {
  store_id bigint [primary key, increment]
  seller_id bigint [ref: > Users.user_id, not null, unique] // Đảm bảo mỗi seller_id chỉ có một Store
  market_id bigint [ref: > Markets.market_id, not null]
  name varchar(100) [not null]
  address text [not null]
  latitude decimal(10,8)
  longitude decimal(11,8)
  contact_number varchar(20)
  status enum('Open', 'Closed', 'Suspended') [default: 'Open']
  rating decimal(3,2) [default: 0.0]
  store_image_url varchar(255)
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Store_Follows {
  follow_id bigint [primary key, increment]
  user_id bigint [ref: > Users.user_id, not null]
  store_id bigint [ref: > Stores.store_id, not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  indexes {
    (user_id, store_id) [unique]
  }
}

Table Categories {
  category_id bigint [primary key, increment]
  name varchar(50) [not null]
  description text
  status enum('Active', 'Inactive') [default: 'Active']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Category_Registrations {
  registration_id bigint [primary key, increment]
  seller_id bigint [ref: > Users.user_id, not null]
  category_name varchar(50) [not null]
  description text
  status enum('Pending', 'Approved', 'Rejected') [default: 'Pending']
  rejection_reason text
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Products {
  product_id bigint [primary key, increment]
  store_id bigint [ref: > Stores.store_id, not null]
  category_id bigint [ref: > Categories.category_id, not null]
  name varchar(100) [not null]
  description text
  price decimal(10,2) [not null]
  stock_quantity int [not null]
  status enum('Active', 'Inactive') [default: 'Active']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Product_Images {
  image_id bigint [primary key, increment]
  product_id bigint [ref: > Products.product_id, not null]
  image_url varchar(255) [not null]
  is_watermarked boolean [default: false]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table Carts {
  cart_id bigint [primary key, increment]
  user_id bigint [ref: > Users.user_id, not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Cart_Items {
  cart_item_id bigint [primary key, increment]
  cart_id bigint [ref: > Carts.cart_id, not null]
  product_id bigint [ref: > Products.product_id, not null]
  quantity int [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Orders {
  order_id bigint [primary key, increment]
  buyer_id bigint [ref: > Users.user_id, not null]
  total_amount decimal(10,2) [not null]
  delivery_address text [not null]
  status enum('Pending', 'Preparing', 'Delivering', 'Completed', 'Cancelled') [default: 'Pending']
  payment_status enum('Pending', 'Completed', 'Failed') [default: 'Pending']
  expected_delivery_time timestamp // UC076
  notes text // UC076
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Order_Items {
  order_item_id bigint [primary key, increment]
  order_id bigint [ref: > Orders.order_id, not null]
  product_id bigint [ref: > Products.product_id, not null]
  quantity int [not null]
  price_at_purchase decimal(10,2) [not null]
}

Table Proxy_Shopping_Orders {
  proxy_order_id bigint [primary key, increment]
  buyer_id bigint [ref: > Users.user_id, not null]
  proxy_shopper_id bigint [ref: > Users.user_id]
  delivery_address text [not null]
  total_amount decimal(10,2)
  status enum('Pending', 'Accepted', 'Completed', 'Cancelled') [default: 'Pending']
  proxy_fee decimal(10,2)
  notes text
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Proxy_Shopping_Order_Items {
  item_id bigint [primary key, increment]
  proxy_order_id bigint [ref: > Proxy_Shopping_Orders.proxy_order_id, not null]
  product_id bigint [ref: > Products.product_id, not null]
  quantity int [not null]
  price_at_purchase decimal(10,2) [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}
Table Reviews {
  review_id bigint [primary key, increment]
  user_id bigint [ref: > Users.user_id, not null]
  target_type enum('Product', 'Seller', 'ProxyShopper') [not null]
  target_id bigint [not null]
  rating int [note: '1 to 5']
  comment text
  response text
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Bargains {
  bargain_id bigint [primary key, increment]
  product_id bigint [ref: > Products.product_id, not null]
  buyer_id bigint [ref: > Users.user_id, not null]
  seller_id bigint [ref: > Users.user_id, not null]
  proposed_price decimal(10,2) [not null]
  response_price decimal(10,2)
  status enum('Pending', 'Accepted', 'Rejected') [default: 'Pending']
  rejection_reason text
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}
Table Favorites {
  favorite_id bigint [primary key, increment]
  user_id bigint [ref: > Users.user_id, not null]
  product_id bigint [ref: > Products.product_id, not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  indexes {
    (user_id, product_id) [unique]
  }
}

Table Notifications {
  notification_id bigint [primary key, increment]
  user_id bigint [ref: > Users.user_id, not null]
  type enum('Order', 'OrderStatus', 'OrderCancellation', 'PaymentStatus', 'RefundStatus', 'Violation', 'Administrative', 'Security', 'Chat') [not null]
  message text [not null]
  related_entity enum('Order', 'Store', 'Product', 'User') [not null]
  related_entity_id bigint [not null]
  is_read boolean [default: false]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table Market_Fees {
  fee_id bigint [primary key, increment]
  market_id bigint [ref: > Markets.market_id, not null]
  amount decimal(10,2) [not null]
  description text
  due_date date // UC158
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Market_Fee_Payments {
  payment_id bigint [primary key, increment]
  seller_id bigint [ref: > Users.user_id, not null]
  fee_id bigint [ref: > Market_Fees.fee_id, not null]
  amount decimal(10,2) [not null]
  payment_status enum('Pending', 'Completed', 'Failed') [default: 'Pending']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table Reports {
  report_id bigint [primary key, increment]
  reporter_id bigint [ref: > Users.user_id, not null]
  target_type enum('Product', 'Seller', 'Buyer') [not null]
  target_id bigint [not null]
  reason text [not null]
  status enum('Pending', 'Resolved', 'Dismissed') [default: 'Pending']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Support_Requests {
  request_id bigint [primary key, increment]
  user_id bigint [ref: > Users.user_id, not null]
  subject varchar(100) [not null]
  description text [not null]
  status enum('Open', 'InProgress', 'Resolved') [default: 'Open']
  response text
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table FAQs {
  faq_id bigint [primary key, increment]
  question varchar(255) [not null]
  answer text [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Market_Rules {
  rule_id bigint [primary key, increment]
  market_id bigint [ref: > Markets.market_id, not null]
  description text [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Table Chats {
  chat_id bigint [primary key, increment]
  sender_id bigint [ref: > Users.user_id, not null]
  receiver_id bigint [ref: > Users.user_id, not null]
  message text [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table Platform_Policies {
  policy_id bigint [primary key, increment]
  title varchar(100) [not null]
  content text [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'Updates on change']
}

Ref: "Market_Fee_Payments"."payment_id" < "Market_Fee_Payments"."amount"

Ref: "Users"."phone_number" < "Users"."two_factor_enabled"

Ref: "Proxy_Shopping_Orders"."notes" < "Proxy_Shopping_Orders"."created_at"