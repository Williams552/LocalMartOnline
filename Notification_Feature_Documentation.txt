================================================================================
                    TÍNH NĂNG NOTIFICATION KHI UPLOAD HÌNH ẢNH
================================================================================

📍 MÔ TẢ TÍNH NĂNG
================================================================================
Khi Proxy Shopper upload hình ảnh chứng từ mua hàng (receipts, product photos), 
hệ thống sẽ tự động tạo notification gửi cho Buyer để thông báo rằng việc mua 
hàng đã hoàn thành và sẵn sàng để giao.

🔧 CÁC THAY ĐỔI ĐÃ THỰC HIỆN
================================================================================

1. CAAPH NHẬT INTERFACE INotificationService:
   - Thêm method CreateNotificationAsync() để tạo notification trong database

2. CAAPH NHẬT NotificationService:
   - Implement CreateNotificationAsync() method
   - Tạo notification record trong MongoDB

3. CAAPH NHẬT ProxyShopperService:
   - Inject INotificationService dependency
   - Update UploadBoughtItemsAsync() để tạo notification sau khi upload thành công

4. CAAPH NHẬT ProxyShoppingOrder Model:
   - Thêm trường ProofImages để lưu danh sách URL hình ảnh

5. CAAPH NHẬT ProxyShopperAcceptedRequestDto:
   - Thêm trường ProofImages trong response của my-accepted endpoint

📤 FLOW HOẠT ĐỘNG
================================================================================

1. Proxy Shopper gọi API: POST /api/ProxyShopper/orders/{orderId}/proof
2. Upload thành công → Lưu images vào ProofImages field
3. Tự động tạo notification cho Buyer:
   - Title: "🛍️ Proxy đã mua hàng thành công!"
   - Message: Chi tiết về việc hoàn thành mua hàng và upload chứng từ
   - Type: "PROXY_SHOPPING_PROOF_UPLOADED"

📋 NOTIFICATION DETAILS
================================================================================

NOTIFICATION STRUCTURE:
{
  "userId": "{buyerId}",
  "title": "🛍️ Proxy đã mua hàng thành công!",
  "message": "Proxy shopper đã hoàn tất việc mua sản phẩm của bạn và đã upload ảnh chứng từ. Đơn hàng #{orderId} sẵn sàng để giao. Hãy kiểm tra ảnh chứng từ và xác nhận đã nhận hàng.",
  "type": "PROXY_SHOPPING_PROOF_UPLOADED",
  "isRead": false,
  "createdAt": "2025-08-01T10:30:00Z"
}

🔍 API ENDPOINT ĐÃ CẢI THIỆN
================================================================================

POST /api/ProxyShopper/orders/{orderId}/proof

REQUEST BODY:
{
  "imageUrls": [
    "https://storage.example.com/receipts/receipt_001.jpg",
    "https://storage.example.com/products/product_photo_001.jpg"
  ],
  "note": "Đã mua đầy đủ các sản phẩm theo yêu cầu. Hóa đơn và ảnh sản phẩm thực tế đã được chụp."
}

ENHANCED RESPONSE:
{
  "message": "Upload ảnh chứng từ thành công.",
  "orderId": "64f1a2b3c4d5e6f7g8h9i0j1",
  "imageCount": 2,
  "uploadedAt": "2025-08-01T10:30:00Z"
}

📱 MY-ACCEPTED ENDPOINT CẢI THIỆN
================================================================================

GET /api/ProxyShopper/requests/my-accepted

RESPONSE BỔ SUNG TRƯỜNG ProofImages:
{
  "requestId": "...",
  "orderItems": [...],
  "totalAmount": 100000,
  "proxyFee": 5000,
  "notes": "Đã mua đầy đủ các sản phẩm theo yêu cầu.",
  "proofImages": [
    "https://storage.example.com/receipts/receipt_001.jpg",
    "https://storage.example.com/products/product_photo_001.jpg"
  ],
  "currentPhase": "Đang mua hàng",
  "canUploadProof": true
}

🎯 LỢI ÍCH CỦA TÍNH NĂNG
================================================================================

1. THÔNG BÁO REAL-TIME:
   - Buyer được thông báo ngay khi proxy hoàn thành mua hàng
   - Không cần phải manually check trạng thái đơn hàng

2. MINH BẠCH:
   - Buyer có thể xem ảnh chứng từ để verify việc mua hàng
   - Tăng tính tin cậy của dịch vụ proxy shopping

3. USER EXPERIENCE:
   - Flow mượt mà từ upload proof → notification → buyer confirm
   - Giảm thời gian chờ đợi và uncertainty

4. AUDIT TRAIL:
   - Lưu trữ đầy đủ hình ảnh chứng từ
   - Có thể trace back lịch sử giao dịch

🔒 SECURITY & ERROR HANDLING
================================================================================

1. VALIDATION:
   - Kiểm tra order status phải là "InProgress"
   - Validate image URLs format
   - Authorization check cho proxy shopper

2. ERROR HANDLING:
   - Graceful handling nếu notification creation fails
   - Logging chi tiết cho debugging
   - Không affect main upload flow nếu notification lỗi

3. DATABASE CONSISTENCY:
   - Atomic operations cho upload và notification
   - Rollback mechanism nếu cần

📅 CREATED: August 1, 2025
📄 FILE: Notification_Feature_Documentation.txt
🏗️ PROJECT: LocalMartOnline - Proxy Shopping Notification Module

================================================================================
